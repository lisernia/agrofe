#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
wrapper.java.command=java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=afip.facturaElectronica.serviceWrapper.RunService

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/wrapper/wrapper.jar
wrapper.java.classpath.2=../lib/collections-generic-4.01.jar
wrapper.java.classpath.3=../lib/commons-collections-3.1.jar
wrapper.java.classpath.4=../lib/ejb3-persistence.jar
wrapper.java.classpath.5=../lib/hibernate-annotations.jar
wrapper.java.classpath.6=../lib/hibernate-commons-annotations.jar
wrapper.java.classpath.7=../lib/hibernate-core.jar
wrapper.java.classpath.8=../lib/httpunit.jar
wrapper.java.classpath.9=../lib/ibmjsse.jar
wrapper.java.classpath.10=../lib/javassist-3.7.ga.jar
wrapper.java.classpath.11=../lib/jta.jar
wrapper.java.classpath.12=../lib/mail.jar
wrapper.java.classpath.13=../lib/mysql-connector-java-5.1.6-bin.jar
wrapper.java.classpath.14=../lib/saaj.jar
wrapper.java.classpath.15=../lib/slf4j-api-1.5.3.jar
wrapper.java.classpath.16=../lib/slf4j-log4j12-1.5.3.jar
wrapper.java.classpath.17=../lib/axis_1.4/activation.jar
wrapper.java.classpath.18=../lib/axis_1.4/axis.jar
wrapper.java.classpath.19=../lib/axis_1.4/axis-ant.jar
wrapper.java.classpath.20=../lib/axis_1.4/commons-discovery-0.2.jar
wrapper.java.classpath.21=../lib/axis_1.4/commons-logging-1.0.4.jar
wrapper.java.classpath.22=../lib/axis_1.4/log4j-1.2.14.jar
wrapper.java.classpath.23=../lib/axis_1.4/wsdl4j-1.5.1.jar
wrapper.java.classpath.24=../lib/bc_1.4/bcmail-jdk16-140.jar
wrapper.java.classpath.25=../lib/bc_1.4/bcprov-jdk16-140.jar
wrapper.java.classpath.26=../lib/dom4j_1.6.1/dom4j-1.6.1.jar
wrapper.java.classpath.27=../lib/javax/activation.jar
wrapper.java.classpath.28=../lib/javax/javax.jms.jar
wrapper.java.classpath.29=../lib/javax/jaxrpc.jar
wrapper.java.classpath.30=../lib/javax/mailapi_1_3_1.jar
wrapper.java.classpath.31=../lib/jaxen-1.1.1/jaxen-1.1.1.jar
wrapper.java.classpath.32=../lib/junit_3.8.1/junit-3.8.1.jar
wrapper.java.classpath.33=../lib/oracle/ojdbc14.jar
wrapper.java.classpath.34=../lib/xstream/xpp3_min-1.1.4c.jar
wrapper.java.classpath.35=.
# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib/wrapper

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
#wrapper.java.additional.1= -version

# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=3

# Maximum Java Heap Size (in MB)
#wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1
#wrapper.app.parameter.1=

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Title to use when running as a console
wrapper.console.title=Test Wrapper Sample Application

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=Agro_WSFE_AFIP

# Display name of the service
wrapper.displayname=Agro WSFE AFIP

# Description of the service
wrapper.description=Aplicación para enviar las facturas a la AFIP

# Service dependencies.  Add dependencies as needed starting from 1
#wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=DEMAND_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

